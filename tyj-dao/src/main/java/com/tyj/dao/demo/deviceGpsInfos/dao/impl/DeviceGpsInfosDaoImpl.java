/*
 * Copyright (C) 2015 CK, Inc. All Rights Reserved.
 */

package com.tyj.dao.demo.deviceGpsInfos.dao.impl;

import cn.vansky.framework.core.dao.ConfigurableBaseSqlMapDao;
import cn.vansky.framework.core.dao.DaoMapper;
import com.tyj.dao.demo.deviceGpsInfos.bo.DeviceGpsInfos;
import com.tyj.dao.demo.deviceGpsInfos.dao.DeviceGpsInfosDao;
import com.tyj.dao.demo.deviceGpsInfos.dao.DeviceGpsInfosMapper;
import javax.annotation.Resource;
import org.apache.ibatis.session.SqlSessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Map;

/**
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table `device_gps_infos`
 *
 * @mbggenerated 2015-12-09 08:31:58
 */
@Repository("deviceGpsInfosDao")
public class DeviceGpsInfosDaoImpl extends ConfigurableBaseSqlMapDao<DeviceGpsInfos, Integer> implements DeviceGpsInfosDao {
    @Autowired
    private DeviceGpsInfosMapper deviceGpsInfosMapper;

    @Override
    public DaoMapper<DeviceGpsInfos, Integer> getDaoMapper() {
        return deviceGpsInfosMapper;
    }

    @Resource(name = "sqlSessionFactory")
    @Override
    public void setSqlSessionFactory(SqlSessionFactory sqlSessionFactory) {
        setSqlSessionFactoryInternal(sqlSessionFactory);
    }

    @Override
    public List<DeviceGpsInfos> findDaySpeed(Map<String, Object> params) {
        return deviceGpsInfosMapper.findDaySpeed(params);
    }

    @Override
    public List<Map<String, Object>> findByDeviceIds(List<Integer> list) {
        return deviceGpsInfosMapper.findByDeviceIds(list);
    }

    @Override
    public void delByDeviceIdAndTime(Map<String, Object> params) {
        deviceGpsInfosMapper.delByDeviceIdAndTime(params);
    }

    @Override
    public List<Map<String, Object>> findAlarmMessage(Map<String, Object> params) {
        return deviceGpsInfosMapper.findAlarmMessage(params);
    }

    @Override
    public List<DeviceGpsInfos> findByDeviceIdAndTime(Map<String, Object> params) {
        return deviceGpsInfosMapper.findByDeviceIdAndTime(params);
    }

    @Override
    public List<DeviceGpsInfos> findByDeviceIdAndTypes(Map<String, Object> params) {
        return deviceGpsInfosMapper.findByDeviceIdAndTypes(params);
    }

    @Override
    public void createPartition(Map<String, Object> params) {
        deviceGpsInfosMapper.createPartition(params);
    }

    @Override
    public List<DeviceGpsInfos> findLocation(Map<String, Object> params) {
        return deviceGpsInfosMapper.findLocation(params);
    }
}